diff --unified --recursive --text --new-file snappy-1.2.1.orig/CMakeLists.txt snappy-1.2.1/CMakeLists.txt
--- snappy-1.2.1.orig/CMakeLists.txt	2024-09-25 22:35:44.563365640 +0200
+++ snappy-1.2.1/CMakeLists.txt	2024-09-25 22:40:22.273395168 +0200
@@ -331,19 +331,18 @@
   set(install_gmock OFF)
   set(build_gmock ON)
 
-  # This project is tested using GoogleTest.
-  add_subdirectory("third_party/googletest")
+  find_package(GTest REQUIRED)
 
   # GoogleTest triggers a missing field initializers warning.
   if(SNAPPY_HAVE_NO_MISSING_FIELD_INITIALIZERS)
-    set_property(TARGET gtest
+    set_property(TARGET GTest::gtest
         APPEND PROPERTY COMPILE_OPTIONS -Wno-missing-field-initializers)
-    set_property(TARGET gmock
+    set_property(TARGET GTest::gmock
         APPEND PROPERTY COMPILE_OPTIONS -Wno-missing-field-initializers)
   endif(SNAPPY_HAVE_NO_MISSING_FIELD_INITIALIZERS)
 
   if(SNAPPY_HAVE_NO_IMPLICIT_INT_FLOAT_CONVERSION)
-    set_property(TARGET gtest
+    set_property(TARGET GTest::gtest
         APPEND PROPERTY COMPILE_OPTIONS -Wno-implicit-int-float-conversion)
   endif(SNAPPY_HAVE_NO_IMPLICIT_INT_FLOAT_CONVERSION)
 
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -187,6 +187,12 @@
   "${PROJECT_BINARY_DIR}/config.h"
 )
 
+configure_file(
+  "${CMAKE_CURRENT_SOURCE_DIR}/snappy.pc.in"
+  "${CMAKE_CURRENT_BINARY_DIR}/snappy.pc"
+  @ONLY
+)
+
 # We don't want to define HAVE_ macros in public headers. Instead, we use
 # CMake's variable substitution with 0/1 variables, which will be seen by the
 # preprocessor as constants.
@@ -395,4 +401,8 @@
       "${PROJECT_BINARY_DIR}/cmake/${PROJECT_NAME}ConfigVersion.cmake"
     DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}"
   )
+  install(
+    FILES "${PROJECT_BINARY_DIR}/snappy.pc"
+    DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig"
+  )
 endif(SNAPPY_INSTALL)
From 516fdcca6606502e2d562d20c01b225c8d066739 Mon Sep 17 00:00:00 2001
From: holmes1412 <liyingxin1412@gmail.com>
Date: Fri, 28 May 2021 21:46:53 +0800
Subject: [PATCH] remove Disable-RTTI flags for the convenient of derivation

---
 CMakeLists.txt | 8 --------
 1 file changed, 8 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 672561e..31afaa0 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -51,10 +51,6 @@ if(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
   string(REGEX REPLACE "/EH[a-z]+" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /EHs-c-")
   add_definitions(-D_HAS_EXCEPTIONS=0)
-
-  # Disable RTTI.
-  string(REGEX REPLACE "/GR" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
-  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /GR-")
 else(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
   # Use -Wall for clang and gcc.
   if(NOT CMAKE_CXX_FLAGS MATCHES "-Wall")
@@ -76,10 +72,6 @@ else(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
   # Disable C++ exceptions.
   string(REGEX REPLACE "-fexceptions" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-exceptions")
-
-  # Disable RTTI.
-  string(REGEX REPLACE "-frtti" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
-  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-rtti")
 endif(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
 
 # BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to make
