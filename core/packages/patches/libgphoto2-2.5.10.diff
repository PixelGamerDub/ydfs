diff -Naur libgphoto2-2.5.10/camlibs/ax203/ax203.c libgphoto2-2.5.10-p/camlibs/ax203/ax203.c
--- libgphoto2-2.5.10/camlibs/ax203/ax203.c	2015-10-17 11:56:40.000000000 +0200
+++ libgphoto2-2.5.10-p/camlibs/ax203/ax203.c	2016-03-29 05:47:03.352887039 +0200
@@ -1152,7 +1152,7 @@
 #ifdef HAVE_LIBJPEG
 		dinfo.err = jpeg_std_error (&jderr);
 		jpeg_create_decompress (&dinfo);
-		jpeg_mem_src (&dinfo, (unsigned char *)src, src_size);
+		my_jpeg_mem_src (&dinfo, (unsigned char *)src, src_size);
 		jpeg_read_header (&dinfo, TRUE);
 		jpeg_start_decompress (&dinfo);
 		if (dinfo.output_width  != camera->pl->width ||
diff -Naur libgphoto2-2.5.10/camlibs/ax203/ax203_compress_jpeg.c libgphoto2-2.5.10-p/camlibs/ax203/ax203_compress_jpeg.c
--- libgphoto2-2.5.10/camlibs/ax203/ax203_compress_jpeg.c	2015-10-17 11:56:36.000000000 +0200
+++ libgphoto2-2.5.10-p/camlibs/ax203/ax203_compress_jpeg.c	2016-03-29 05:47:03.347886908 +0200
@@ -208,7 +208,7 @@
 	/* Get the raw coefficients from the regular JPEG */
 	dinfo.err = jpeg_std_error (&jderr);
 	jpeg_create_decompress (&dinfo);
-	jpeg_mem_src (&dinfo, regular_jpeg, regular_jpeg_size);
+	my_jpeg_mem_src (&dinfo, regular_jpeg, regular_jpeg_size);
 	jpeg_read_header (&dinfo, TRUE);
 	in_coefficients = jpeg_read_coefficients (&dinfo);
 
diff -Naur libgphoto2-2.5.10/camlibs/ax203/jpeg_memsrcdest.c libgphoto2-2.5.10-p/camlibs/ax203/jpeg_memsrcdest.c
--- libgphoto2-2.5.10/camlibs/ax203/jpeg_memsrcdest.c	2015-08-08 17:57:29.000000000 +0200
+++ libgphoto2-2.5.10-p/camlibs/ax203/jpeg_memsrcdest.c	2016-03-29 05:47:03.346886882 +0200
@@ -47,7 +47,7 @@
 METHODDEF(void)
 init_source (j_decompress_ptr cinfo)
 {
-	/* No work, since jpeg_mem_src set up the buffer pointer and count.
+	/* No work, since my_jpeg_mem_src set up the buffer pointer and count.
 	* Indeed, if we want to read multiple JPEG images from one buffer,
 	* this *must* not do anything to the pointer.
 	*/
@@ -143,13 +143,13 @@
 */
 
 GLOBAL(void)
-jpeg_mem_src (j_decompress_ptr cinfo, unsigned char * buffer,
+my_jpeg_mem_src (j_decompress_ptr cinfo, unsigned char * buffer,
 	unsigned long bufsize)
 {
 	my_src_ptr src;
 
 	/* The source object is made permanent so that a series of JPEG images
-	* can be read from a single buffer by calling jpeg_mem_src
+	* can be read from a single buffer by calling my_jpeg_mem_src
 	* only before the first one.
 	* This makes it unsafe to use this manager and a different source
 	* manager serially with the same JPEG object. Caveat programmer.
diff -Naur libgphoto2-2.5.10/camlibs/ax203/jpeg_memsrcdest.h libgphoto2-2.5.10-p/camlibs/ax203/jpeg_memsrcdest.h
--- libgphoto2-2.5.10/camlibs/ax203/jpeg_memsrcdest.h	2015-08-08 17:57:29.000000000 +0200
+++ libgphoto2-2.5.10-p/camlibs/ax203/jpeg_memsrcdest.h	2016-03-29 05:47:03.358887195 +0200
@@ -1,7 +1,7 @@
 #include <jpeglib.h>
 
 void
-jpeg_mem_src (j_decompress_ptr cinfo, unsigned char * buffer,
+my_jpeg_mem_src (j_decompress_ptr cinfo, unsigned char * buffer,
 	unsigned long bufsize);
 
 void
diff -Naur libgphoto2-2.5.10/camlibs/jl2005c/jl2005bcd_decompress.c libgphoto2-2.5.10-p/camlibs/jl2005c/jl2005bcd_decompress.c
--- libgphoto2-2.5.10/camlibs/jl2005c/jl2005bcd_decompress.c	2016-01-25 20:29:57.000000000 +0100
+++ libgphoto2-2.5.10-p/camlibs/jl2005c/jl2005bcd_decompress.c	2016-03-29 05:47:03.066879573 +0200
@@ -243,7 +243,7 @@
 		memcpy (jpeg_stripe + JPEG_HEADER_SIZE,
 			jpeg_data + jpeg_data_idx, size);
 
-		jpeg_mem_src (&dinfo, jpeg_stripe, JPEG_HEADER_SIZE + size);
+		my_jpeg_mem_src (&dinfo, jpeg_stripe, JPEG_HEADER_SIZE + size);
 		jpeg_read_header (&dinfo, TRUE);
 		dinfo.raw_data_out = TRUE;
 #if JPEG_LIB_VERSION >= 70
diff -Naur libgphoto2-2.5.10/camlibs/jl2005c/jpeg_memsrcdest.c libgphoto2-2.5.10-p/camlibs/jl2005c/jpeg_memsrcdest.c
--- libgphoto2-2.5.10/camlibs/jl2005c/jpeg_memsrcdest.c	2015-08-08 17:57:29.000000000 +0200
+++ libgphoto2-2.5.10-p/camlibs/jl2005c/jpeg_memsrcdest.c	2016-03-29 05:47:03.063879494 +0200
@@ -47,7 +47,7 @@
 METHODDEF(void)
 init_source (j_decompress_ptr cinfo)
 {
-	/* No work, since jpeg_mem_src set up the buffer pointer and count.
+	/* No work, since my_jpeg_mem_src set up the buffer pointer and count.
 	* Indeed, if we want to read multiple JPEG images from one buffer,
 	* this *must* not do anything to the pointer.
 	*/
@@ -143,13 +143,13 @@
 */
 
 GLOBAL(void)
-jpeg_mem_src (j_decompress_ptr cinfo, unsigned char * buffer,
+my_jpeg_mem_src (j_decompress_ptr cinfo, unsigned char * buffer,
 	unsigned long bufsize)
 {
 	my_src_ptr src;
 
 	/* The source object is made permanent so that a series of JPEG images
-	* can be read from a single buffer by calling jpeg_mem_src
+	* can be read from a single buffer by calling my_jpeg_mem_src
 	* only before the first one.
 	* This makes it unsafe to use this manager and a different source
 	* manager serially with the same JPEG object. Caveat programmer.
diff -Naur libgphoto2-2.5.10/camlibs/jl2005c/jpeg_memsrcdest.h libgphoto2-2.5.10-p/camlibs/jl2005c/jpeg_memsrcdest.h
--- libgphoto2-2.5.10/camlibs/jl2005c/jpeg_memsrcdest.h	2015-08-08 17:57:29.000000000 +0200
+++ libgphoto2-2.5.10-p/camlibs/jl2005c/jpeg_memsrcdest.h	2016-03-29 05:47:03.068879625 +0200
@@ -1,7 +1,7 @@
 #include <jpeglib.h>
 
 void
-jpeg_mem_src (j_decompress_ptr cinfo, unsigned char * buffer,
+my_jpeg_mem_src (j_decompress_ptr cinfo, unsigned char * buffer,
 	unsigned long bufsize);
 
 void
