diff --git a/libopkg/opkg.c b/libopkg/opkg.c
index 8aa3268..cd18771 100644
--- a/libopkg/opkg.c
+++ b/libopkg/opkg.c
@@ -29,9 +29,9 @@
 #include "opkg_download.h"
 #include "opkg_remove.h"
 #include "opkg_upgrade.h"
+#include "file_util.h"
 
 #include "sprintf_alloc.h"
-#include "file_util.h"
 
 #include <libbb/libbb.h>
 
@@ -43,6 +43,12 @@
 
 /** Private Functions ***/
 
+int
+yann_str_starts_with(const char *str, const char *prefix)
+{
+    return (strncmp(str, prefix, strlen(prefix)) == 0);
+}
+
 static int
 opkg_configure_packages(char *pkg_name)
 {
@@ -594,11 +600,17 @@ opkg_update_package_lists(opkg_progress_callback_t progress_callback,
 			struct _curl_cb_data cb_data;
 			char *tmp_file_name = NULL;
 
-			sprintf_alloc(&tmp_file_name, "%s/%s.gz", tmp,
-				      src->name);
-
-			opkg_msg(INFO, "Downloading %s to %s...\n", url,
-					tmp_file_name);
+			sprintf_alloc(&tmp_file_name, "%s/%s.gz", tmp, src->name);
+			// Save huge RAM !
+			if (yann_str_starts_with(src, "file:"))
+			{
+			opkg_msg(INFO, "Linking %s to %s...\n", url, tmp_file_name);
+			symlink(url,tmp_file_name);
+			err=0;
+			}
+			else
+			{
+			opkg_msg(INFO, "Downloading from %s to %s...\n", url, tmp_file_name);
 
 			cb_data.cb = progress_callback;
 			cb_data.progress_data = &pdata;
@@ -611,7 +623,7 @@ opkg_update_package_lists(opkg_progress_callback_t progress_callback,
 			err = opkg_download(url, tmp_file_name,
 					  (curl_progress_func) curl_progress_cb,
 					  &cb_data, 0);
-
+			}
 			if (err == 0) {
 				opkg_msg(INFO, "Inflating %s...\n",
 						tmp_file_name);
diff --git a/libopkg/opkg_download.c b/libopkg/opkg_download.c
index e53e64e..beccc4b 100644
--- a/libopkg/opkg_download.c
+++ b/libopkg/opkg_download.c
@@ -90,16 +90,19 @@ opkg_download(const char *src, const char *dest_file_name,
     char *src_base = basename(src_basec);
     char *tmp_file_location;
 
-    opkg_msg(NOTICE,"Downloading %s.\n", src);
 
     if (str_starts_with(src, "file:")) {
+        opkg_msg(NOTICE,"Linking now %s.\n", src);
 	const char *file_src = src + 5;
 	opkg_msg(INFO, "Copying %s to %s...", file_src, dest_file_name);
-	err = file_copy(file_src, dest_file_name);
+	// err = file_copy(file_src, dest_file_name);
+	err = symlink(file_src, dest_file_name);
 	opkg_msg(INFO, "Done.\n");
         free(src_basec);
 	return err;
     }
+	else
+    opkg_msg(NOTICE,"Downloading now %s.\n", src);
 
     sprintf_alloc(&tmp_file_location, "%s/%s", conf->tmp_dir, src_base);
     free(src_basec);
