ARCHIVE=$HOME/ydfs/tarballs/"$DIR".run
pkgver=`basename $DIR| cut -d'-' -f4`
pkgdir=/$HOME/ydfs/packages-x86_64/nvidia-$pkgver/$HOME/$ARCH
[ -e "$pkgdir" ] && echo "$pkgdir exists, skip building" && exit 0
cd $HOME/ydfs/src
mkdir nvidia
cd nvidia 
[ ! -e "$DIR" ] && sh $ARCHIVE --extract-only
 cd $DIR
 # X driver
  install -D -m755 nvidia_drv.so "${pkgdir}/lib/xorg/modules/drivers/nvidia_drv.so" || exit 1

  # GLX extension module for X
  install -D -m755 "libglx.so.${pkgver}" "${pkgdir}/lib/nvidia/xorg/libglx.so.${pkgver}"
  ln -s "libglx.so.${pkgver}" "${pkgdir}/lib/nvidia/xorg/libglx.so.1"    # X doesn't find glx otherwise
  ln -s "libglx.so.${pkgver}" "${pkgdir}/lib/nvidia/xorg/libglx.so"    # X doesn't find glx otherwise
  # OpenGL libraries
  install -D -m755 "libGL.so.${pkgver}" "${pkgdir}/lib/nvidia/libGL.so.${pkgver}"

  # OpenGL core library
  install -D -m755 "libnvidia-glcore.so.${pkgver}" "${pkgdir}/lib/nvidia/libnvidia-glcore.so.${pkgver}"

  # XvMC
  install -D -m755 "libXvMCNVIDIA.so.${pkgver}" "${pkgdir}/lib/nvidia/libXvMCNVIDIA.so.${pkgver}"

  # VDPAU
  install -D -m755 "libvdpau_nvidia.so.${pkgver}" "${pkgdir}/lib/vdpau/libvdpau_nvidia.so.${pkgver}"

  # nvidia-tls library
  install -D -m755 "tls/libnvidia-tls.so.${pkgver}" "${pkgdir}/lib/nvidia/libnvidia-tls.so.${pkgver}"
  install -D -m755 "libnvidia-cfg.so.${pkgver}" "${pkgdir}/lib/nvidia/libnvidia-cfg.so.${pkgver}"
  install -D -m755 "libnvidia-ml.so.${pkgver}" "${pkgdir}/lib/nvidia/libnvidia-ml.so.${pkgver}"
  
  # CUDA
  install -D -m755 "libcuda.so.${pkgver}" "${pkgdir}/lib/nvidia/libcuda.so.${pkgver}"
  install -D -m755 "libnvcuvid.so.${pkgver}" "${pkgdir}/lib/nvidia/libnvcuvid.so.${pkgver}"

  # DEBUG
  install -D -m755 nvidia-debugdump "${pkgdir}/bin/nvidia-debugdump"

  # nvidia-xconfig
  install -D -m755 nvidia-xconfig "${pkgdir}/bin/nvidia-xconfig"
  install -D -m644 nvidia-xconfig.1.gz "${pkgdir}/share/man/man1/nvidia-xconfig.1.gz"

  # nvidia-settings
  install -D -m755 nvidia-settings "${pkgdir}/bin/nvidia-settings"
  install -D -m644 nvidia-settings.1.gz "${pkgdir}/share/man/man1/nvidia-settings.1.gz"
  install -D -m644 nvidia-settings.desktop "${pkgdir}/share/applications/nvidia-settings.desktop"
  install -D -m644 nvidia-settings.png "${pkgdir}/share/pixmaps/nvidia-settings.png"
  sed -e 's:__UTILS_PATH__:/bin:' -e 's:__PIXMAP_PATH__:/share/pixmaps:' -i "${pkgdir}/share/applications/nvidia-settings.desktop"

  # nvidia-bug-report
  install -D -m755 nvidia-bug-report.sh "${pkgdir}/bin/nvidia-bug-report.sh"

  # nvidia-smi
  install -D -m755 nvidia-smi "${pkgdir}/bin/nvidia-smi"
  install -D -m644 nvidia-smi.1.gz "${pkgdir}/share/man/man1/nvidia-smi.1.gz"

  install -D -m644 LICENSE "${pkgdir}/share/licenses/nvidia-304xx/LICENSE"
  ln -s nvidia-304xx "${pkgdir}/share/licenses/nvidia-304xx-utils"

  install -D -m644 README.txt "${pkgdir}/share/doc/nvidia-304xx/README"
  install -D -m644 NVIDIA_Changelog "${pkgdir}/share/doc/nvidia-304xx/NVIDIA_Changelog"
  ln -s nvidia-304xx "${pkgdir}/share/doc/nvidia-304xx-utils"

  # We have to provide symlinks to mesa, as nvidia 304xx doesn't ship them
  ln -s /lib/libEGL.so.1.0.0 "${pkgdir}/lib/nvidia/libEGL.so.1.0.0"
  ln -s libEGL.so.1.0.0      "${pkgdir}/lib/nvidia/libEGL.so.1"
  ln -s libEGL.so.1.0.0      "${pkgdir}/lib/nvidia/libEGL.so"

  ln -s /lib/libGLESv1_CM.so.1.1.0 "${pkgdir}/lib/nvidia/libGLESv1_CM.so.1.1.0"
  ln -s libGLESv1_CM.so.1.1.0      "${pkgdir}/lib/nvidia/libGLESv1_CM.so.1"
  ln -s libGLESv1_CM.so.1.1.0      "${pkgdir}/lib/nvidia/libGLESv1_CM.so"

  ln -s /lib/libGLESv2.so.2.0.0 "${pkgdir}/lib/nvidia/libGLESv2.so.2.0.0"
  ln -s libGLESv2.so.2.0.0      "${pkgdir}/lib/nvidia/libGLESv2.so.2"
  ln -s libGLESv2.so.2.0.0      "${pkgdir}/lib/nvidia/libGLESv2.so"

  # distro specific files must be installed in /share/X11/xorg.conf.d
  install -m755 -d "${pkgdir}/share/X11/xorg.conf.d"
  install -m644 "${srcdir}/nvidia-drm-outputclass.conf" "${pkgdir}/share/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf"

cd kernel
make SYSSRC=$HOME/ydfs/src/linux-$KERNEL3/ SYSOUT=$HOME/ydfs/build/linux-x86_64-$KERNEL3 module || exit 1
install -d ${pkgdir}/lib/modules
cp nvidia.ko ${pkgdir}/lib/modules
cd $HOME/ydfs/packages-x86_64/nvidia-$pkgver
$HOME_DIBAB/scripts/make_opkg
